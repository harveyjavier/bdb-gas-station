{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","state","isLoaded","gasData","fetch","then","res","json","result","console","log","setState","catch","error","className","this","average","fast","fastest","src","logo","alt","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,MAA0B,iC,eC8C1BA,E,kDAxCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAU,EACVC,QAAS,IAJC,E,sDAQd,WAAsB,IAAD,OACnBC,MAAM,kDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAET,UAAU,EAAMC,QAASK,OAE1CI,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,Q,oBAIhB,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACIC,KAAKd,MAAMC,SACT,gCACE,iDACA,4BAAI,YAAca,KAAKd,MAAME,QAAQa,QAAU,SAC/C,4BAAI,SAAWD,KAAKd,MAAME,QAAQc,KAAO,SACzC,4BAAI,YAAcF,KAAKd,MAAME,QAAQe,QAAU,YAGjD,qBAAKC,IAAKC,EAAMN,UAAU,WAAWO,IAAI,iB,GAlCrCC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08aed9f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      isLoaded: false,\n      gasData: {},\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"https://ethgasstation.info/json/ethgasAPI.json\")\n    .then(res => res.json())\n    .then(result => {\n      console.log(result);\n      this.setState({ isLoaded: true, gasData: result });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          { this.state.isLoaded ?\n              <div>\n                <h3>ETH Gas â›½:</h3>\n                <p>{\"average: \" + this.state.gasData.average + \"GWEI\"}</p>\n                <p>{\"fast: \" + this.state.gasData.fast + \"GWEI\"}</p>\n                <p>{\"fastest: \" + this.state.gasData.fastest + \"GWEI\"}</p>\n              </div>\n            :\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          }\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}